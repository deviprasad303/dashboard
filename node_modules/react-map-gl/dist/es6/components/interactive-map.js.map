{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["PureComponent","createElement","PropTypes","StaticMap","MAPBOX_LIMITS","WebMercatorViewport","TransitionManager","EventManager","MapControls","config","deprecateWarn","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","transitionDuration","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onContextMenu","touchAction","string","clickRadius","getCursor","mapControls","shape","events","arrayOf","handleEvent","getDefaultCursor","isDragging","isHovering","CURSOR","GRABBING","POINTER","GRAB","defaultProps","event","preventDefault","childContextTypes","viewport","instanceOf","eventManager","InteractiveMap","supported","constructor","props","state","_mapControls","_eventManager","legacyBlockScroll","getMap","bind","queryRenderedFeatures","_getFeatures","_onInteractiveStateChange","_getPos","_eventCanvasLoaded","_staticMapLoaded","getChildContext","componentDidMount","on","mousemove","_onMouseMove","click","_onMouseClick","contextmenu","_onContextMenu","setOptions","viewState","onStateChange","_transitionManager","componentWillUpdate","nextProps","nextPropsWithViewState","processViewportChange","_map","geometry","options","pos","radius","features","size","bbox","setState","offsetCenter","x","y","length","lngLat","unproject","ref","setElement","render","width","height","eventCanvasStyle","position","cursor","key","style","getViewportInTransition","children","displayName"],"mappings":"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","sourcesContent":["import {PureComponent, createElement} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapControls from '../utils/map-controls';\nimport config from '../config';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.number,\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n /**\n    * Called when the map is hovered over.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onHover: PropTypes.func,\n  /**\n    * Called when the map is clicked.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onClick: PropTypes.func,\n  /**\n    * Called when the context menu is activated.\n    */\n  onContextMenu: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controls\n  // The object must expose one property: `events` as an array of subscribed\n  // event names; and two methods: `setState(state)` and `handle(event)`\n  mapControls: PropTypes.shape({\n    events: PropTypes.arrayOf(PropTypes.string),\n    handleEvent: PropTypes.func\n  })\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) => isDragging ?\n  config.CURSOR.GRABBING :\n  (isHovering ? config.CURSOR.POINTER : config.CURSOR.GRAB);\n\nconst defaultProps = Object.assign({},\n  StaticMap.defaultProps, MAPBOX_LIMITS, TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\nconst childContextTypes = {\n  viewport: PropTypes.instanceOf(WebMercatorViewport),\n  isDragging: PropTypes.bool,\n  eventManager: PropTypes.object\n};\n\nexport default class InteractiveMap extends PureComponent {\n\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  constructor(props) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    this.state = {\n      // Whether the cursor is down\n      isDragging: false,\n      // Whether the cursor is over a clickable feature\n      isHovering: false\n    };\n\n    // If props.mapControls is not provided, fallback to default MapControls instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._mapControls = props.mapControls || new MapControls();\n\n    this._eventManager = new EventManager(null, {\n      legacyBlockScroll: false,\n      touchAction: props.touchAction\n    });\n\n    this.getMap = this.getMap.bind(this);\n    this.queryRenderedFeatures = this.queryRenderedFeatures.bind(this);\n    this._getFeatures = this._getFeatures.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n    this._getPos = this._getPos.bind(this);\n    this._eventCanvasLoaded = this._eventCanvasLoaded.bind(this);\n    this._staticMapLoaded = this._staticMapLoaded.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      viewport: new WebMercatorViewport(this.props),\n      isDragging: this.state.isDragging,\n      eventManager: this._eventManager\n    };\n  }\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      mousemove: this._onMouseMove.bind(this),\n      click: this._onMouseClick.bind(this),\n      contextmenu: this._onContextMenu.bind(this)\n    });\n\n    this._mapControls.setOptions(Object.assign({}, this.props, this.props.viewState, {\n      onStateChange: this._onInteractiveStateChange,\n      eventManager\n    }));\n\n    this._transitionManager = new TransitionManager(this.props);\n  }\n\n  componentWillUpdate(nextProps) {\n    const nextPropsWithViewState = Object.assign({}, nextProps, nextProps.viewState);\n    this._mapControls.setOptions(nextPropsWithViewState);\n    this._transitionManager.processViewportChange(nextPropsWithViewState);\n  }\n\n  getMap() {\n    return this._map ? this._map.getMap() : null;\n  }\n\n  queryRenderedFeatures(geometry, options) {\n    return this._map.queryRenderedFeatures(geometry, options);\n  }\n\n  _getFeatures({pos, radius}) {\n    let features;\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = this._map.queryRenderedFeatures(bbox);\n    } else {\n      features = this._map.queryRenderedFeatures(pos);\n    }\n    return features;\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.state.isDragging) {\n      this.setState({isDragging});\n    }\n  }\n\n  // HOVER AND CLICK\n  _getPos(event) {\n    const {offsetCenter: {x, y}} = event;\n    return [x, y];\n  }\n\n  _onMouseMove(event) {\n    if (!this.state.isDragging) {\n      const pos = this._getPos(event);\n      const features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      const isHovering = features && features.length > 0;\n      if (isHovering !== this.state.isHovering) {\n        this.setState({isHovering});\n      }\n\n      if (this.props.onHover) {\n        const viewport = new WebMercatorViewport(this.props);\n        event.lngLat = viewport.unproject(pos);\n        event.features = features;\n\n        this.props.onHover(event);\n      }\n    }\n  }\n\n  _onMouseClick(event) {\n    if (this.props.onClick) {\n      const pos = this._getPos(event);\n      const viewport = new WebMercatorViewport(this.props);\n      event.lngLat = viewport.unproject(pos);\n      event.features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      this.props.onClick(event);\n    }\n  }\n\n  _onContextMenu(event) {\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(event);\n    }\n  }\n\n  _eventCanvasLoaded(ref) {\n    // This will be called with `null` after unmount, releasing event manager resource\n    this._eventManager.setElement(ref);\n  }\n\n  _staticMapLoaded(ref) {\n    this._map = ref;\n  }\n\n  render() {\n    const {width, height, getCursor} = this.props;\n\n    const eventCanvasStyle = {\n      width,\n      height,\n      position: 'relative',\n      cursor: getCursor(this.state)\n    };\n\n    return (\n      createElement('div', {\n        key: 'map-controls',\n        ref: this._eventCanvasLoaded,\n        style: eventCanvasStyle\n      },\n        createElement(StaticMap, Object.assign({}, this.props,\n          this._transitionManager && this._transitionManager.getViewportInTransition(),\n          {\n            ref: this._staticMapLoaded,\n            children: this.props.children\n          }\n        ))\n      )\n    );\n  }\n}\n\nInteractiveMap.displayName = 'InteractiveMap';\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\nInteractiveMap.childContextTypes = childContextTypes;\n"],"file":"interactive-map.js"}