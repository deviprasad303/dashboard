{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["PureComponent","createElement","PropTypes","StaticMap","MAPBOX_LIMITS","WebMercatorViewport","TransitionManager","EventManager","MapControls","config","deprecateWarn","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","transitionDuration","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onContextMenu","touchAction","string","clickRadius","getCursor","mapControls","shape","events","arrayOf","handleEvent","getDefaultCursor","isDragging","isHovering","CURSOR","GRABBING","POINTER","GRAB","defaultProps","event","preventDefault","childContextTypes","viewport","instanceOf","eventManager","InteractiveMap","props","state","_mapControls","_eventManager","legacyBlockScroll","getMap","bind","queryRenderedFeatures","_getFeatures","_onInteractiveStateChange","_getPos","_eventCanvasLoaded","_staticMapLoaded","supported","on","mousemove","_onMouseMove","click","_onMouseClick","contextmenu","_onContextMenu","setOptions","viewState","onStateChange","_transitionManager","nextProps","nextPropsWithViewState","processViewportChange","_map","geometry","options","features","pos","radius","size","bbox","setState","offsetCenter","x","y","length","lngLat","unproject","ref","setElement","width","height","eventCanvasStyle","position","cursor","key","style","getViewportInTransition","children","displayName"],"mappings":"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","sourcesContent":["import {PureComponent, createElement} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapControls from '../utils/map-controls';\nimport config from '../config';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.number,\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n /**\n    * Called when the map is hovered over.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onHover: PropTypes.func,\n  /**\n    * Called when the map is clicked.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onClick: PropTypes.func,\n  /**\n    * Called when the context menu is activated.\n    */\n  onContextMenu: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controls\n  // The object must expose one property: `events` as an array of subscribed\n  // event names; and two methods: `setState(state)` and `handle(event)`\n  mapControls: PropTypes.shape({\n    events: PropTypes.arrayOf(PropTypes.string),\n    handleEvent: PropTypes.func\n  })\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) => isDragging ?\n  config.CURSOR.GRABBING :\n  (isHovering ? config.CURSOR.POINTER : config.CURSOR.GRAB);\n\nconst defaultProps = Object.assign({},\n  StaticMap.defaultProps, MAPBOX_LIMITS, TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\nconst childContextTypes = {\n  viewport: PropTypes.instanceOf(WebMercatorViewport),\n  isDragging: PropTypes.bool,\n  eventManager: PropTypes.object\n};\n\nexport default class InteractiveMap extends PureComponent {\n\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  constructor(props) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    this.state = {\n      // Whether the cursor is down\n      isDragging: false,\n      // Whether the cursor is over a clickable feature\n      isHovering: false\n    };\n\n    // If props.mapControls is not provided, fallback to default MapControls instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._mapControls = props.mapControls || new MapControls();\n\n    this._eventManager = new EventManager(null, {\n      legacyBlockScroll: false,\n      touchAction: props.touchAction\n    });\n\n    this.getMap = this.getMap.bind(this);\n    this.queryRenderedFeatures = this.queryRenderedFeatures.bind(this);\n    this._getFeatures = this._getFeatures.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n    this._getPos = this._getPos.bind(this);\n    this._eventCanvasLoaded = this._eventCanvasLoaded.bind(this);\n    this._staticMapLoaded = this._staticMapLoaded.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      viewport: new WebMercatorViewport(this.props),\n      isDragging: this.state.isDragging,\n      eventManager: this._eventManager\n    };\n  }\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      mousemove: this._onMouseMove.bind(this),\n      click: this._onMouseClick.bind(this),\n      contextmenu: this._onContextMenu.bind(this)\n    });\n\n    this._mapControls.setOptions(Object.assign({}, this.props, this.props.viewState, {\n      onStateChange: this._onInteractiveStateChange,\n      eventManager\n    }));\n\n    this._transitionManager = new TransitionManager(this.props);\n  }\n\n  componentWillUpdate(nextProps) {\n    const nextPropsWithViewState = Object.assign({}, nextProps, nextProps.viewState);\n    this._mapControls.setOptions(nextPropsWithViewState);\n    this._transitionManager.processViewportChange(nextPropsWithViewState);\n  }\n\n  getMap() {\n    return this._map ? this._map.getMap() : null;\n  }\n\n  queryRenderedFeatures(geometry, options) {\n    return this._map.queryRenderedFeatures(geometry, options);\n  }\n\n  _getFeatures({pos, radius}) {\n    let features;\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = this._map.queryRenderedFeatures(bbox);\n    } else {\n      features = this._map.queryRenderedFeatures(pos);\n    }\n    return features;\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.state.isDragging) {\n      this.setState({isDragging});\n    }\n  }\n\n  // HOVER AND CLICK\n  _getPos(event) {\n    const {offsetCenter: {x, y}} = event;\n    return [x, y];\n  }\n\n  _onMouseMove(event) {\n    if (!this.state.isDragging) {\n      const pos = this._getPos(event);\n      const features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      const isHovering = features && features.length > 0;\n      if (isHovering !== this.state.isHovering) {\n        this.setState({isHovering});\n      }\n\n      if (this.props.onHover) {\n        const viewport = new WebMercatorViewport(this.props);\n        event.lngLat = viewport.unproject(pos);\n        event.features = features;\n\n        this.props.onHover(event);\n      }\n    }\n  }\n\n  _onMouseClick(event) {\n    if (this.props.onClick) {\n      const pos = this._getPos(event);\n      const viewport = new WebMercatorViewport(this.props);\n      event.lngLat = viewport.unproject(pos);\n      event.features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      this.props.onClick(event);\n    }\n  }\n\n  _onContextMenu(event) {\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(event);\n    }\n  }\n\n  _eventCanvasLoaded(ref) {\n    // This will be called with `null` after unmount, releasing event manager resource\n    this._eventManager.setElement(ref);\n  }\n\n  _staticMapLoaded(ref) {\n    this._map = ref;\n  }\n\n  render() {\n    const {width, height, getCursor} = this.props;\n\n    const eventCanvasStyle = {\n      width,\n      height,\n      position: 'relative',\n      cursor: getCursor(this.state)\n    };\n\n    return (\n      createElement('div', {\n        key: 'map-controls',\n        ref: this._eventCanvasLoaded,\n        style: eventCanvasStyle\n      },\n        createElement(StaticMap, Object.assign({}, this.props,\n          this._transitionManager && this._transitionManager.getViewportInTransition(),\n          {\n            ref: this._staticMapLoaded,\n            children: this.props.children\n          }\n        ))\n      )\n    );\n  }\n}\n\nInteractiveMap.displayName = 'InteractiveMap';\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\nInteractiveMap.childContextTypes = childContextTypes;\n"],"file":"interactive-map.js"}